// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace _4Ucode_sms.Domain.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20230218003822_Initial1")]
    partial class Initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.ContatoDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.ToTable("tb_contato", (string)null);
                });

            modelBuilder.Entity("Domain.Models.ConteudoCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("char(36)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("varchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("tb_conteudo_cliente", (string)null);
                });

            modelBuilder.Entity("Domain.Models.DadosCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("CountEnvios")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("tb_cliente", (string)null);
                });

            modelBuilder.Entity("Domain.Models.EnvioDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Enviado")
                        .HasColumnType("int");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("NumeroId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TextoEnvio")
                        .IsRequired()
                        .HasColumnType("varchar(260)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("NumeroId");

                    b.ToTable("tb_envios", (string)null);
                });

            modelBuilder.Entity("Domain.Models.ModelTwillo.TwilloModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AccountSid")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FromPhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ServiceSid")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("StatusSend")
                        .HasColumnType("int");

                    b.Property<string>("ToPhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("twillo_Log");
                });

            modelBuilder.Entity("Domain.Models.ConteudoCliente", b =>
                {
                    b.HasOne("Domain.Models.DadosCliente", "DadosCliente")
                        .WithMany("ConteudoCliente")
                        .HasForeignKey("IdCliente")
                        .IsRequired();

                    b.Navigation("DadosCliente");
                });

            modelBuilder.Entity("Domain.Models.EnvioDocumento", b =>
                {
                    b.HasOne("Domain.Models.DadosCliente", "Cliente")
                        .WithMany("EnvioDocumentos")
                        .HasForeignKey("IdCliente")
                        .IsRequired();

                    b.HasOne("Domain.Models.ContatoDocumento", "Numero")
                        .WithMany("EnvioDocumentos")
                        .HasForeignKey("NumeroId")
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Numero");
                });

            modelBuilder.Entity("Domain.Models.ContatoDocumento", b =>
                {
                    b.Navigation("EnvioDocumentos");
                });

            modelBuilder.Entity("Domain.Models.DadosCliente", b =>
                {
                    b.Navigation("ConteudoCliente");

                    b.Navigation("EnvioDocumentos");
                });
#pragma warning restore 612, 618
        }
    }
}
